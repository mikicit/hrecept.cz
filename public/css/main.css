/**
 * Color
 */
/**
 * Space
 */
/**
 * Breakpoint Infix
 */
/**
 * Typography
 */
/**
 * Z-Index
 */
/**
 * List Unstyled
 *
 * Unstyled keeps list items block level, just removes default browser padding and list-style
 */
/**
 * Breakpoint
 */
/**
 * Containers
 */
/**
 * Grid
 */
/**
 * Make Vertical Gutter
 */
/**
 * Make Spaces
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  background-color: #F1F2F4;
  color: #474D52;
  font-family: "Roboto", "Arial", "Helvetica", sans-serif;
  font-size: 16px;
  font-weight: normal;
  line-height: 1.5;
  text-align: left;
  margin: 0;
}

main {
  display: block;
}

h1 {
  font-size: 40px;
  line-height: 48px;
  font-weight: normal;
}

h2 {
  font-size: 32px;
  line-height: 40px;
  font-weight: normal;
}

h3 {
  font-size: 24px;
  line-height: 32px;
  font-weight: normal;
}

h4 {
  font-size: 16px;
  line-height: 20px;
  font-weight: bold;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #181A1B;
}

a {
  color: #27AE60;
  text-decoration: none;
}

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
}

textarea {
  min-width: 100%;
  max-width: 100%;
}

/**
 * Grid
 *
 * Classes for grid layout
 */
.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -16px;
  margin-left: -16px;
}

.no-gutters {
  margin-right: 0;
  margin-left: 0;
}
.no-gutters > .col,
.no-gutters > [class*=col-] {
  padding-right: 0;
  padding-left: 0;
}

.col-12, .col-11, .col-10, .col-9, .col-8, .col-7, .col-6, .col-5, .col-4, .col-3, .col-2, .col-1, .col,
.col-auto {
  position: relative;
  width: 100%;
  min-height: 1px;
  padding-right: 16px;
  padding-left: 16px;
}

.col {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}

.col-auto {
  flex: 0 0 auto;
  width: auto;
  max-width: none;
}

.col-1 {
  flex: 0 0 8.3333333333%;
  max-width: 8.3333333333%;
}

.col-2 {
  flex: 0 0 16.6666666667%;
  max-width: 16.6666666667%;
}

.col-3 {
  flex: 0 0 25%;
  max-width: 25%;
}

.col-4 {
  flex: 0 0 33.3333333333%;
  max-width: 33.3333333333%;
}

.col-5 {
  flex: 0 0 41.6666666667%;
  max-width: 41.6666666667%;
}

.col-6 {
  flex: 0 0 50%;
  max-width: 50%;
}

.col-7 {
  flex: 0 0 58.3333333333%;
  max-width: 58.3333333333%;
}

.col-8 {
  flex: 0 0 66.6666666667%;
  max-width: 66.6666666667%;
}

.col-9 {
  flex: 0 0 75%;
  max-width: 75%;
}

.col-10 {
  flex: 0 0 83.3333333333%;
  max-width: 83.3333333333%;
}

.col-11 {
  flex: 0 0 91.6666666667%;
  max-width: 91.6666666667%;
}

.col-12 {
  flex: 0 0 100%;
  max-width: 100%;
}

.vgut {
  margin-top: -32px;
}
.vgut > .col,
.vgut > [class*=col-] {
  margin-top: 32px;
}

.vgut-m {
  margin-top: -24px;
}
.vgut-m > .col,
.vgut-m > [class*=col-] {
  margin-top: 24px;
}

.vgut-xl {
  margin-top: -48px;
}
.vgut-xl > .col,
.vgut-xl > [class*=col-] {
  margin-top: 48px;
}

.p-xxs {
  padding: 4px;
}

.p-xs {
  padding: 8px;
}

.p-s {
  padding: 16px;
}

.p-m {
  padding: 24px;
}

.p-l {
  padding: 32px;
}

.p-xl {
  padding: 48px;
}

.p-xxl {
  padding: 64px;
}

.p-xxxl {
  padding: 96px;
}

.pt-xxs {
  padding-top: 4px;
}

.pt-xs {
  padding-top: 8px;
}

.pt-s {
  padding-top: 16px;
}

.pt-m {
  padding-top: 24px;
}

.pt-l {
  padding-top: 32px;
}

.pt-xl {
  padding-top: 48px;
}

.pt-xxl {
  padding-top: 64px;
}

.pt-xxxl {
  padding-top: 96px;
}

.pr-xxs {
  padding-right: 4px;
}

.pr-xs {
  padding-right: 8px;
}

.pr-s {
  padding-right: 16px;
}

.pr-m {
  padding-right: 24px;
}

.pr-l {
  padding-right: 32px;
}

.pr-xl {
  padding-right: 48px;
}

.pr-xxl {
  padding-right: 64px;
}

.pr-xxxl {
  padding-right: 96px;
}

.pb-xxs {
  padding-bottom: 4px;
}

.pb-xs {
  padding-bottom: 8px;
}

.pb-s {
  padding-bottom: 16px;
}

.pb-m {
  padding-bottom: 24px;
}

.pb-l {
  padding-bottom: 32px;
}

.pb-xl {
  padding-bottom: 48px;
}

.pb-xxl {
  padding-bottom: 64px;
}

.pb-xxxl {
  padding-bottom: 96px;
}

.pl-xxs {
  padding-left: 4px;
}

.pl-xs {
  padding-left: 8px;
}

.pl-s {
  padding-left: 16px;
}

.pl-m {
  padding-left: 24px;
}

.pl-l {
  padding-left: 32px;
}

.pl-xl {
  padding-left: 48px;
}

.pl-xxl {
  padding-left: 64px;
}

.pl-xxxl {
  padding-left: 96px;
}

.m-xxs {
  margin: 4px;
}

.m-xs {
  margin: 8px;
}

.m-s {
  margin: 16px;
}

.m-m {
  margin: 24px;
}

.m-l {
  margin: 32px;
}

.m-xl {
  margin: 48px;
}

.m-xxl {
  margin: 64px;
}

.m-xxxl {
  margin: 96px;
}

.mt-xxs {
  margin-top: 4px;
}

.mt-xs {
  margin-top: 8px;
}

.mt-s {
  margin-top: 16px;
}

.mt-m {
  margin-top: 24px;
}

.mt-l {
  margin-top: 32px;
}

.mt-xl {
  margin-top: 48px;
}

.mt-xxl {
  margin-top: 64px;
}

.mt-xxxl {
  margin-top: 96px;
}

.mr-xxs {
  margin-right: 4px;
}

.mr-xs {
  margin-right: 8px;
}

.mr-s {
  margin-right: 16px;
}

.mr-m {
  margin-right: 24px;
}

.mr-l {
  margin-right: 32px;
}

.mr-xl {
  margin-right: 48px;
}

.mr-xxl {
  margin-right: 64px;
}

.mr-xxxl {
  margin-right: 96px;
}

.mb-xxs {
  margin-bottom: 4px;
}

.mb-xs {
  margin-bottom: 8px;
}

.mb-s {
  margin-bottom: 16px;
}

.mb-m {
  margin-bottom: 24px;
}

.mb-l {
  margin-bottom: 32px;
}

.mb-xl {
  margin-bottom: 48px;
}

.mb-xxl {
  margin-bottom: 64px;
}

.mb-xxxl {
  margin-bottom: 96px;
}

.ml-xxs {
  margin-left: 4px;
}

.ml-xs {
  margin-left: 8px;
}

.ml-s {
  margin-left: 16px;
}

.ml-m {
  margin-left: 24px;
}

.ml-l {
  margin-left: 32px;
}

.ml-xl {
  margin-left: 48px;
}

.ml-xxl {
  margin-left: 64px;
}

.ml-xxxl {
  margin-left: 96px;
}

/**
 * Containers
 *
 * Base containers for blocks, content and so on.
 */
/**
* Base Container
*/
.container-fluid, .container-medium, .container-small, .container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-left: 64px;
  padding-right: 64px;
}

.container {
  max-width: 1392px;
}

.container-small {
  max-width: 880px;
}

.container-medium {
  max-width: 1104px;
}

@supports (flex-direction: column) {
  .page {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }
}
.page__footer {
  margin-top: auto;
}

.section__heading {
  margin: 0 0 48px;
}
.section__footer {
  margin-top: 32px;
  text-align: center;
}

.section-small__heading {
  margin: 0 0 32px;
  font-size: 24px;
  line-height: 32px;
  font-weight: normal;
}

.sidebar {
  background-color: white;
  border-radius: 4px;
  padding: 32px 24px;
}

.sidebar-filter__heading {
  font-size: 14px;
  line-height: 20px;
  font-weight: bold;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  margin: 0 0 16px;
  padding-bottom: 16px;
  border-bottom: 1px solid #F1F2F4;
}
.sidebar-filter__block {
  margin: 0;
  padding: 0;
  border: 0;
}
.sidebar-filter__block + .sidebar-filter__block {
  margin-top: 16px;
}
.sidebar-filter__block-heading {
  font-size: 16px;
  line-height: 24px;
  font-weight: normal;
  margin: 0 0 8px;
  padding: 0;
  width: 100%;
}

.btn {
  background: none;
  border: none;
  cursor: pointer;
  padding: 8px 16px;
  display: inline-block;
  border-radius: 4px;
  overflow: hidden;
  text-align: center;
  vertical-align: middle;
  font-size: 16px;
  line-height: 24px;
  font-weight: normal;
}
.btn--lg {
  padding: 16px 24px;
}
.btn--primary {
  background-color: #27AE60;
  color: white;
  transition: background-color 200ms;
}
.btn--primary:focus, .btn--primary:hover {
  background-color: #27C168;
}
.btn--primary:active {
  background-color: #209752;
}
.btn--secondary {
  background-color: white;
  box-shadow: inset 0 0 0 1px #D5D9DD;
  color: #474D52;
  transition: background-color 200ms, box-shadow 200ms;
}
.btn--secondary:focus, .btn--secondary:hover {
  box-shadow: inset 0 0 0 1px #474D52;
}
.btn--secondary:active {
  background-color: #F1F2F4;
}

.alert {
  color: white;
  border-radius: 4px;
  padding: 16px;
  margin: 0;
  font-size: 14px;
  line-height: 20px;
  font-weight: normal;
}
.alert--success {
  background-color: #27AE60;
}
.alert--error {
  background-color: #df5555;
}

.form-file, .form-select, .form-textarea, .form-input {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

.form-select, .form-textarea, .form-input {
  border: 1px solid #D5D9DD;
  border-radius: 4px;
  outline: none;
  transition: border-color 200ms;
}
.is-invalid.form-select, .is-invalid.form-textarea, .is-invalid.form-input {
  border-color: #df5555;
}
.form-select:not(.is-invalid):not([disabled]):active, .form-textarea:not(.is-invalid):not([disabled]):active, .form-input:not(.is-invalid):not([disabled]):active, .form-select:not(.is-invalid):not([disabled]):focus, .form-textarea:not(.is-invalid):not([disabled]):focus, .form-input:not(.is-invalid):not([disabled]):focus, .form-select:not(.is-invalid):not([disabled]):hover, .form-textarea:not(.is-invalid):not([disabled]):hover, .form-input:not(.is-invalid):not([disabled]):hover {
  border-color: #474D52;
}

.form-checkbox__control, .form-select, .form-textarea, .form-input {
  background-color: white;
}
[disabled].form-checkbox__control, [disabled].form-select, [disabled].form-textarea, [disabled].form-input {
  background-color: #F1F2F4;
}

.form {
  position: relative;
}

.input-error {
  color: #df5555;
  margin: 4px 0 0;
  font-size: 14px;
  line-height: 20px;
  font-weight: normal;
}

.form-label {
  display: inline-block;
  margin: 0 0 8px;
}

.form-input {
  display: block;
  line-height: 40px;
  width: 100%;
  height: 40px;
  padding: 0 16px;
}

.form-textarea {
  width: 100%;
  padding: 16px;
}

.form-select {
  height: 40px;
  padding: 0 16px;
  cursor: pointer;
}
.form-select[disabled] {
  cursor: inherit;
}

.form-checkbox {
  display: flex;
  align-items: center;
}
.form-checkbox__label {
  margin-left: 8px;
  cursor: pointer;
}
.form-checkbox__control {
  width: 16px;
  height: 16px;
  margin: 0;
  cursor: pointer;
}

.form-radio {
  display: flex;
  align-items: center;
}
.form-radio__label {
  margin-left: 8px;
  cursor: pointer;
}
.form-radio__control {
  width: 16px;
  height: 16px;
  margin: 0;
  cursor: pointer;
}

.form-radio-row {
  display: flex;
  margin-left: -8px;
}
.form-radio-row > .form-radio {
  margin-left: 8px;
}

.form-file {
  background-color: #F1F2F4;
  border-radius: 4px;
  border: 2px dashed #D5D9DD;
  padding: 32px 16px;
  width: 100%;
  cursor: pointer;
}

.star-rating {
  display: flex;
  color: white;
  font-size: 16px;
  line-height: 1em;
}
.star-rating--lg {
  font-size: 24px;
}
.star-rating > *.is-active {
  color: #F2C94C;
}
.star-rating > * + * {
  margin-left: 8px;
}

.tags {
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style: none;
  display: flex;
  flex-wrap: wrap;
  margin-left: -8px;
  margin-top: -8px;
}
.tags__tag {
  margin-left: 8px;
  margin-top: 8px;
}
.tags__link {
  display: inline-block;
  background-color: #E3E6E8;
  color: #646464;
  border-radius: 50px;
  padding: 4px 8px;
  font-size: 14px;
  line-height: 16px;
}

.pagination {
  display: flex;
  justify-content: center;
}
.pagination__list {
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style: none;
  display: flex;
}
.pagination__item {
  margin-right: 8px;
}
.pagination__link {
  display: inline-block;
  line-height: 40px;
  padding: 0 16px;
  background-color: white;
  border-radius: 4px;
  color: inherit;
  transition: background-color 200ms, color 200ms;
}
.pagination__link.is-active {
  background-color: #27AE60;
  color: white;
}
.pagination__link:not(.is-active):hover, .pagination__link:not(.is-active):hover {
  background-color: #27AE60;
  color: white;
}
.pagination__link:not(.is-active):active {
  background-color: #209752;
  color: white;
}

.logo {
  display: inline-block;
  margin-right: 24px;
  width: 160px;
  height: 40px;
  transition: opacity 200ms;
}
.logo:focus, .logo:hover {
  opacity: 0.6;
}

.recipe-card {
  background-color: white;
  border-radius: 4px;
  overflow: hidden;
}
.recipe-card__body {
  padding: 32px 24px;
}
.recipe-card__title {
  font-size: 16px;
  line-height: 24px;
  font-weight: normal;
  margin: 0;
}
.recipe-card__stars {
  color: #D5D9DD;
  margin-top: 8px;
}
.recipe-card__tags {
  margin-top: 8px;
}
.recipe-card__btn {
  margin-top: 16px;
}

.page-header {
  background-color: white;
  padding-top: 16px;
  padding-bottom: 16px;
}
.page-header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
}
.page-header__search {
  flex-grow: 1;
  margin: 0 32px;
}

.header-search {
  display: flex;
}
.header-search__input {
  line-height: 40px;
  padding: 0 16px;
  border: 0;
  background-color: #F1F2F4;
  border-radius: 4px 0 0 4px;
  flex-grow: 1;
  font-family: inherit;
  font-size: inherit;
}
.header-search__btn {
  border-radius: 0 4px 4px 0;
}

.header-nav__list {
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style: none;
  display: flex;
}
.header-nav__link {
  font-size: 14px;
  line-height: 20px;
  font-weight: bold;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  color: #181A1B;
  display: block;
  padding: 8px;
}
.header-nav__link:hover {
  color: #27AE60;
}

.header-auth {
  display: flex;
  flex-wrap: wrap;
}

.page-footer {
  padding-top: 64px;
}
.page-footer__inner {
  background-color: white;
  padding-top: 32px;
  padding-bottom: 32px;
}

.recipe__content {
  background-color: white;
  padding: 48px 32px;
  border-radius: 4px;
  margin-top: 48px;
}
.recipe__content p {
  margin: 0;
}
.recipe__content p + p {
  margin-top: 24px;
}

.recipe-header {
  display: flex;
  align-items: center;
  background-color: #2F353C;
  position: relative;
  min-height: 440px;
  padding: 48px 0;
}
.recipe-header__cover {
  background-size: cover;
  background-position: center;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  opacity: 0.4;
}
.recipe-header__main {
  position: relative;
  text-align: center;
}
.recipe-header__title {
  color: white;
  font-size: 48px;
  line-height: 56px;
  font-weight: bold;
  margin: 0;
}
.recipe-header__stars {
  justify-content: center;
  margin-top: 32px;
}
.recipe-header__reviews {
  color: white;
  display: inline-block;
  text-decoration: underline;
  margin-top: 8px;
}

.adding-review__heading {
  margin: 0 0 32px;
  font-size: 24px;
  line-height: 32px;
  font-weight: normal;
}
.adding-review__main {
  background-color: white;
  border-radius: 4px;
  padding: 32px 24px;
}

.reviews__heading {
  margin: 0 0 32px;
  font-size: 24px;
  line-height: 32px;
  font-weight: normal;
}
.reviews__main > * + * {
  margin-top: 24px;
}

.review-card {
  display: flex;
  align-items: flex-start;
  background-color: white;
  padding: 24px;
  border-radius: 4px;
}
.review-card__avatar {
  flex-shrink: 0;
  margin-right: 16px;
  overflow: hidden;
  border-radius: 50px;
}
.review-card__heading {
  margin: 0 0 4px;
  font-size: 16px;
  line-height: 24px;
  font-weight: normal;
}
.review-card__review {
  margin: 0;
}
.review-card__stars {
  color: #D5D9DD;
  margin-top: 16px;
}

.hero {
  display: flex;
  align-items: center;
  position: relative;
  min-height: 440px;
  padding: 48px 0;
  background-color: #D5D9DD;
}
.hero__cover {
  background-size: cover;
  background-position: center;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.hero__heading {
  color: white;
  font-size: 48px;
  line-height: 56px;
  font-weight: bold;
  margin: 0;
  text-shadow: 0 8px 16px rgba(46, 53, 56, 0.15), 0 1px 0 rgba(46, 53, 56, 0.1), 0 -1px 0 rgba(46, 53, 56, 0.1), 1px 0 0 rgba(46, 53, 56, 0.1), -1px 0 0 rgba(46, 53, 56, 0.1);
}
.hero__main {
  position: relative;
  text-align: center;
}

.auth {
  display: flex;
  justify-content: center;
}
.auth__block {
  background-color: white;
  border-radius: 4px;
  flex: 400px 0 1;
  width: 400px;
  padding: 32px 24px;
  margin-top: 64px;
}
.auth__heading {
  font-size: 24px;
  line-height: 32px;
  font-weight: normal;
  margin: 0 0 24px;
}

.bg-gray {
  background-color: #F1F2F4;
}

.bg-white {
  background-color: white;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.d-none {
  display: none !important;
}

.w-100 {
  width: 100%;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
