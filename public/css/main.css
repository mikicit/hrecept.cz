/**
 * Color
 */
/**
 * Space
 */
/**
 * Breakpoint Infix
 */
/**
 * Typography
 */
/**
 * Z-Index
 */
/**
 * List Unstyled
 *
 * Unstyled keeps list items block level, just removes default browser padding and list-style
 */
/**
 * Breakpoint
 */
/**
 * Containers
 */
/**
 * Grid
 */
/**
 * Make Vertical Gutter
 */
/**
 * Make Spaces
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  background-color: #F1F2F4;
  color: #474D52;
  font-family: "Roboto", "Arial", "Helvetica", sans-serif;
  font-size: 16px;
  font-weight: normal;
  line-height: 1.5;
  text-align: left;
  margin: 0;
}

main {
  display: block;
}

h1 {
  font-size: 32px;
  line-height: 32px;
  font-weight: bold;
}

h2 {
  font-size: 24px;
  line-height: 28px;
  font-weight: bold;
}

h3 {
  font-size: 18px;
  line-height: 24px;
  font-weight: bold;
}

h4 {
  font-size: 16px;
  line-height: 20px;
  font-weight: bold;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #181A1B;
}

a {
  color: #27AE60;
  text-decoration: none;
}

/**
 * Grid
 *
 * Classes for grid layout
 */
.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -16px;
  margin-left: -16px;
}

.no-gutters {
  margin-right: 0;
  margin-left: 0;
}
.no-gutters > .col,
.no-gutters > [class*=col-] {
  padding-right: 0;
  padding-left: 0;
}

.col-12, .col-11, .col-10, .col-9, .col-8, .col-7, .col-6, .col-5, .col-4, .col-3, .col-2, .col-1, .col,
.col-auto {
  position: relative;
  width: 100%;
  min-height: 1px;
  padding-right: 16px;
  padding-left: 16px;
}

.col {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}

.col-auto {
  flex: 0 0 auto;
  width: auto;
  max-width: none;
}

.col-1 {
  flex: 0 0 8.3333333333%;
  max-width: 8.3333333333%;
}

.col-2 {
  flex: 0 0 16.6666666667%;
  max-width: 16.6666666667%;
}

.col-3 {
  flex: 0 0 25%;
  max-width: 25%;
}

.col-4 {
  flex: 0 0 33.3333333333%;
  max-width: 33.3333333333%;
}

.col-5 {
  flex: 0 0 41.6666666667%;
  max-width: 41.6666666667%;
}

.col-6 {
  flex: 0 0 50%;
  max-width: 50%;
}

.col-7 {
  flex: 0 0 58.3333333333%;
  max-width: 58.3333333333%;
}

.col-8 {
  flex: 0 0 66.6666666667%;
  max-width: 66.6666666667%;
}

.col-9 {
  flex: 0 0 75%;
  max-width: 75%;
}

.col-10 {
  flex: 0 0 83.3333333333%;
  max-width: 83.3333333333%;
}

.col-11 {
  flex: 0 0 91.6666666667%;
  max-width: 91.6666666667%;
}

.col-12 {
  flex: 0 0 100%;
  max-width: 100%;
}

.vgut {
  margin-top: -32px;
}
.vgut > .col,
.vgut > [class*=col-] {
  margin-top: 32px;
}

.vgut-m {
  margin-top: -24px;
}
.vgut-m > .col,
.vgut-m > [class*=col-] {
  margin-top: 24px;
}

.vgut-xl {
  margin-top: -48px;
}
.vgut-xl > .col,
.vgut-xl > [class*=col-] {
  margin-top: 48px;
}

.p-xxs {
  padding: 4px;
}

.p-xs {
  padding: 8px;
}

.p-s {
  padding: 16px;
}

.p-m {
  padding: 24px;
}

.p-l {
  padding: 32px;
}

.p-xl {
  padding: 48px;
}

.p-xxl {
  padding: 64px;
}

.p-xxxl {
  padding: 96px;
}

.pt-xxs {
  padding-top: 4px;
}

.pt-xs {
  padding-top: 8px;
}

.pt-s {
  padding-top: 16px;
}

.pt-m {
  padding-top: 24px;
}

.pt-l {
  padding-top: 32px;
}

.pt-xl {
  padding-top: 48px;
}

.pt-xxl {
  padding-top: 64px;
}

.pt-xxxl {
  padding-top: 96px;
}

.pr-xxs {
  padding-right: 4px;
}

.pr-xs {
  padding-right: 8px;
}

.pr-s {
  padding-right: 16px;
}

.pr-m {
  padding-right: 24px;
}

.pr-l {
  padding-right: 32px;
}

.pr-xl {
  padding-right: 48px;
}

.pr-xxl {
  padding-right: 64px;
}

.pr-xxxl {
  padding-right: 96px;
}

.pb-xxs {
  padding-bottom: 4px;
}

.pb-xs {
  padding-bottom: 8px;
}

.pb-s {
  padding-bottom: 16px;
}

.pb-m {
  padding-bottom: 24px;
}

.pb-l {
  padding-bottom: 32px;
}

.pb-xl {
  padding-bottom: 48px;
}

.pb-xxl {
  padding-bottom: 64px;
}

.pb-xxxl {
  padding-bottom: 96px;
}

.pl-xxs {
  padding-left: 4px;
}

.pl-xs {
  padding-left: 8px;
}

.pl-s {
  padding-left: 16px;
}

.pl-m {
  padding-left: 24px;
}

.pl-l {
  padding-left: 32px;
}

.pl-xl {
  padding-left: 48px;
}

.pl-xxl {
  padding-left: 64px;
}

.pl-xxxl {
  padding-left: 96px;
}

.m-xxs {
  margin: 4px;
}

.m-xs {
  margin: 8px;
}

.m-s {
  margin: 16px;
}

.m-m {
  margin: 24px;
}

.m-l {
  margin: 32px;
}

.m-xl {
  margin: 48px;
}

.m-xxl {
  margin: 64px;
}

.m-xxxl {
  margin: 96px;
}

.mt-xxs {
  margin-top: 4px;
}

.mt-xs {
  margin-top: 8px;
}

.mt-s {
  margin-top: 16px;
}

.mt-m {
  margin-top: 24px;
}

.mt-l {
  margin-top: 32px;
}

.mt-xl {
  margin-top: 48px;
}

.mt-xxl {
  margin-top: 64px;
}

.mt-xxxl {
  margin-top: 96px;
}

.mr-xxs {
  margin-right: 4px;
}

.mr-xs {
  margin-right: 8px;
}

.mr-s {
  margin-right: 16px;
}

.mr-m {
  margin-right: 24px;
}

.mr-l {
  margin-right: 32px;
}

.mr-xl {
  margin-right: 48px;
}

.mr-xxl {
  margin-right: 64px;
}

.mr-xxxl {
  margin-right: 96px;
}

.mb-xxs {
  margin-bottom: 4px;
}

.mb-xs {
  margin-bottom: 8px;
}

.mb-s {
  margin-bottom: 16px;
}

.mb-m {
  margin-bottom: 24px;
}

.mb-l {
  margin-bottom: 32px;
}

.mb-xl {
  margin-bottom: 48px;
}

.mb-xxl {
  margin-bottom: 64px;
}

.mb-xxxl {
  margin-bottom: 96px;
}

.ml-xxs {
  margin-left: 4px;
}

.ml-xs {
  margin-left: 8px;
}

.ml-s {
  margin-left: 16px;
}

.ml-m {
  margin-left: 24px;
}

.ml-l {
  margin-left: 32px;
}

.ml-xl {
  margin-left: 48px;
}

.ml-xxl {
  margin-left: 64px;
}

.ml-xxxl {
  margin-left: 96px;
}

/**
 * Containers
 *
 * Base containers for blocks, content and so on.
 */
/**
* Base Container
*/
.container-fluid, .container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-left: 64px;
  padding-right: 64px;
}

.container {
  max-width: 1248px;
}

.page-header {
  background-color: white;
  padding-top: 16px;
  padding-bottom: 16px;
}

.header-nav__list {
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style: none;
  display: flex;
}
.header-nav__link {
  font-size: 14px;
  line-height: 20px;
  font-weight: bold;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  color: #181A1B;
  display: block;
  padding: 8px;
}
.header-nav__link:hover {
  color: #27AE60;
}

.page-footer {
  background-color: white;
  height: 300px;
}

.bg-gray {
  background-color: #F1F2F4;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.d-none {
  display: none !important;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
