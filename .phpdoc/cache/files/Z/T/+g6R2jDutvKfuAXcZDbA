1673196833
waR3U4bTeM%3Af233fdf927086f31f9e06818b45c8cea-7d4c64455200fa6f9e34ba5ea271c79e
s:19692:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"7d4c64455200fa6f9e34ba5ea271c79e";s:39:" phpDocumentor\Reflection\Php\File name";s:16:"registration.php";s:39:" phpDocumentor\Reflection\Php\File path";s:35:"controller/account/registration.php";s:41:" phpDocumentor\Reflection\Php\File source";s:6650:"<?php 

/**
 * ControllerAccountRegistration
 * 
 * The controller is responsible for the registration page.
 */
class ControllerAccountRegistration extends Controller
{
    /**
     * Processing get and post requests on the registration page.
     * 
     * @param array $data
     * 
     * @return void
     */
    public function index($data = [])
    {
        if ($_SERVER['REQUEST_METHOD'] == 'GET')
        {
            if ($this->user->getCurrentUser()) $this->response->redirect(Url::getUrl('/profile'));

            ## generating a token for the login form
			$data['token'] = $this->response->setToken();
            
            ## session form data
            if (isset($_SESSION['form_data'])) {
                $data['form_data'] = $_SESSION['form_data'];
                unset($_SESSION['form_data']);
            }
            
            $this->document->setTitle('Registration');

            $header = new ControllerCommonHeader();
            $footer = new ControllerCommonFooter();
            
            $data['header'] = $header->index();
            $data['footer'] = $footer->index();

            $this->response->setOutput($this->view->get('account/registration', $data));
        } 
        elseif ($_SERVER['REQUEST_METHOD'] == 'POST') 
        {
            if (isset($_POST['registration'])) {
                if ($this->user->getCurrentUser()) $this->response->redirect(Url::getUrl('/profile'));

                ## Checking token
				if (!isset($_SESSION['token']) || !isset($_POST['token']) || $_SESSION['token'] !== $_POST['token']) {
					$this->response->redirect(Url::getCurrentUrl());
				}

                $this->response->unsetToken();

                $model_user = new ModelAccountUser();
                
                ## Removing html tags and spaces
                $data['password']  = isset($_POST['password']) ? $_POST['password'] : '';
                $data['password_repeat']  = isset($_POST['password_repeat']) ? $_POST['password_repeat'] : '';
                $data['firstname'] = isset($_POST['firstname']) ? trim(htmlspecialchars($_POST['firstname'])) : '';
                $data['lastname']  = isset($_POST['lastname']) ? trim(htmlspecialchars($_POST['lastname'])) : '';
                $data['email']     = isset($_POST['email']) ? htmlspecialchars($_POST['email']) : '';

                ## Validation
                $data['validation'] = [];
                
                ## Firstname
                $data['validation']['firstname'] = (function(& $data) {
                    if (strlen($data['firstname']) < 2) {
                        return 'Firstname must not be shorter than 2 characters.';
                    }

                    if (strlen($data['firstname']) > 50) {
                        return 'Firstname must not be longer than 50 characters.';
                    }

                    if (!preg_match("/^[a-zA-Z]*$/", $data['firstname'])) {
                        return 'Only letters allowed.';
                    }
                })($data);

                ## Lastname
                $data['validation']['lastname'] = (function(& $data) {
                    if (strlen($data['lastname']) < 2) {
                        return 'Lastname must not be shorter than 2 characters.';
                    }

                    if (strlen($data['lastname']) > 50) {
                        return 'Lastname must not be longer than 50 characters.';
                    }
        
                    if (!preg_match("/^[a-zA-Z]*$/", $data['lastname'])) {
                        return 'Only letters allowed.';
                    }
                })($data);

                ## Email
                $data['validation']['email'] = (function(& $data) {
                    if (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
                        return 'Invalid email format.';
                    }
                })($data);

                ## Password
                $data['validation']['password'] = (function(& $data) {
                    if (strlen($data['password']) < 8) {
                        return 'Password must not be shorter than 8 characters.';
                    }
                })($data);

                ## Password Repeat
                $data['validation']['password_repeat'] = (function(& $data) {
                    if ($data['password'] !== $data['password_repeat']) {
                        return 'Passwords must match.';
                    }
                })($data);

                ## Deleting fields without errors
                $data['validation'] = array_filter($data['validation'], function($value) { return !empty($value); });

                if (empty($data['validation'])) {
                    ## Check if email exists
                    if ($model_user->getUserByEmail($data['email'])) {
                        $data['error'] = 'A user with this Email already exists.';
                    }

                    if (!isset($data['error'])) {
                        ## Hash with salt
                        $password_hash = password_hash($data['password'], PASSWORD_DEFAULT);

                        $query_vars = [
                            'password'  => $password_hash,
                            'firstname' => $data['firstname'],
                            'lastname'  => $data['lastname'],
                            'email'     => $data['email']
                        ];

                        $result = $model_user->addUser($query_vars);

                        if ($result) {
                            $_SESSION['form_data']['registration_success'] = 'Congratulations, you have successfully registered. Enter your login details.';
                            $this->response->redirect(Url::getUrl('/login'));
                        }

                        $data['error'] = 'Something went wrong.';
                    }
                }

                $_SESSION['form_data'] = $data;

                $this->response->redirect(Url::getCurrentUrl());
            }
        }
    }

    public function isEmailExists()
    {
        if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['email'])) {
            $model_user = new ModelAccountUser();
            $user = $model_user->getUserByEmail($_POST['email']);

            if (!$user || empty($user)) {
                echo 'false';
                die();
            }

            echo 'true';
            die();
        }
    }
}";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:30:"\ControllerAccountRegistration";O:35:"phpDocumentor\Reflection\Php\Class_":12:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:30:"\ControllerAccountRegistration";s:36:" phpDocumentor\Reflection\Fqsen name";s:29:"ControllerAccountRegistration";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:29:"ControllerAccountRegistration";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:56:"The controller is responsible for the registration page.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\Controller";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Controller";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:2:{s:39:"\ControllerAccountRegistration::index()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:58:"Processing get and post requests on the registration page.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"data";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:39:"\ControllerAccountRegistration::index()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"index";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:17;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:47:"\ControllerAccountRegistration::isEmailExists()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:47:"\ControllerAccountRegistration::isEmailExists()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"isEmailExists";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:155;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:8;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";