1672918904
waR3U4bTeM%3A023f48b1a40bb389db8af8396322277f-bff38ec07d8d290bcd71bfaa9f6506f2
s:42272:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImJmZjM4ZWMwN2Q4ZDI5MGJjZDcxYmZhYTlmNjUwNmYyIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTA6InJlY2lwZS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoyODoiY29udHJvbGxlci9yZWNpcGUvcmVjaXBlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTc2ODc6Ijw/cGhwIA0KDQovKioNCiAqIENvbnRyb2xsZXJSZWNpcGVSZWNpcGUNCiAqIA0KICogVGhlIGNvbnRyb2xsZXIgaXMgcmVzcG9uc2libGUgZm9yIHRoZSByZWNpcGUgcGFnZXMuDQogKi8NCmNsYXNzIENvbnRyb2xsZXJSZWNpcGVSZWNpcGUgZXh0ZW5kcyBDb250cm9sbGVyDQp7DQogICAgLyoqDQogICAgICogUHJvY2Vzc2luZyBnZXQgYW5kIHBvc3QgcmVxdWVzdHMgb24gdGhlIHJlY2lwZXMgcGFnZS4NCiAgICAgKiANCiAgICAgKiBAcGFyYW0gYXJyYXkgJGRhdGENCiAgICAgKiANCiAgICAgKiBAcmV0dXJuIHZvaWQNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gaW5kZXgoJGRhdGEgPSBbXSkNCiAgICB7ICANCiAgICAgICAgJG1vZGVsX3JlY2lwZSA9IG5ldyBNb2RlbFJlY2lwZVJlY2lwZSgpOw0KDQogICAgICAgICMjIEhhbmRsaW5nIGFuZCBGaWx0ZXJpbmcgUmVxdWVzdCBWYXJpYWJsZXMNCg0KICAgICAgICAjIyBEZWZhdWx0IHF1ZXJ5IHZhcnMNCiAgICAgICAgJHF1ZXJ5X3ZhcnMgPSBbDQogICAgICAgICAgICAncGVyX3BhZ2UnID0+IDMsDQogICAgICAgICAgICAncGFnZScgICAgID0+IDENCiAgICAgICAgXTsNCg0KICAgICAgICAjIyBJbmdyZWRpZW50cyBhbmQgQ2F0ZWdvcmllcyBmaWx0ZXJpbmcNCiAgICAgICAgJGZpbHRlcl9mdW5jdGlvbiA9IGZ1bmN0aW9uKCRpdGVtKSB7DQogICAgICAgICAgICByZXR1cm4gZmlsdGVyX3ZhcigkaXRlbSwgRklMVEVSX1ZBTElEQVRFX0lOVCwgWydvcHRpb25zJyA9PiBbJ21pbl9yYW5nZScgPT4gMV1dKTsNCiAgICAgICAgfTsNCg0KICAgICAgICBpZiAoaXNzZXQoJF9HRVRbJ2luZ3JlZGllbnRzJ10pICYmIGlzX2FycmF5KCRfR0VUWydpbmdyZWRpZW50cyddKSkgew0KICAgICAgICAgICAgJGZpbHRlcmVkX2luZ3JlZGllbnRzID0gYXJyYXlfZmlsdGVyKCRfR0VUWydpbmdyZWRpZW50cyddLCAkZmlsdGVyX2Z1bmN0aW9uKTsNCiAgICAgICAgICAgIGlmICgkZmlsdGVyZWRfaW5ncmVkaWVudHMpICRxdWVyeV92YXJzWydpbmdyZWRpZW50cyddID0gICRmaWx0ZXJlZF9pbmdyZWRpZW50czsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChpc3NldCgkX0dFVFsnY2F0ZWdvcmllcyddKSAmJiBpc19hcnJheSgkX0dFVFsnY2F0ZWdvcmllcyddKSkgew0KICAgICAgICAgICAgJGZpbHRlcmVkX2NhdGVnb3JpZXMgPSBhcnJheV9maWx0ZXIoJF9HRVRbJ2NhdGVnb3JpZXMnXSwgJGZpbHRlcl9mdW5jdGlvbik7DQogICAgICAgICAgICBpZiAoJGZpbHRlcmVkX2NhdGVnb3JpZXMpICRxdWVyeV92YXJzWydjYXRlZ29yaWVzJ10gPSAgJGZpbHRlcmVkX2NhdGVnb3JpZXM7DQogICAgICAgIH0NCg0KICAgICAgICAjIyBTZWFyY2ggZmlsdGVyaW5nDQogICAgICAgIGlmIChpc3NldCgkX0dFVFsnc2VhcmNoJ10pICYmIGlzX3N0cmluZygkX0dFVFsnc2VhcmNoJ10pKSB7DQogICAgICAgICAgICAkZmlsdGVyZWRfc2VhcmNoID0gZmlsdGVyX3ZhcigkX0dFVFsnc2VhcmNoJ10sIEZJTFRFUl9TQU5JVElaRV9TVFJJTkcpOw0KICAgICAgICAgICAgJHF1ZXJ5X3ZhcnNbJ3NlYXJjaCddID0gJGZpbHRlcmVkX3NlYXJjaDsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgIyMgRGVmaW5pbmcgbWF4aW11bSBwYWdlcyBmb3IgcGFnaW5hdGlvbg0KICAgICAgICAkbWF4X3BhZ2VzID0gY2VpbCgkbW9kZWxfcmVjaXBlLT5nZXRRdWFudGl0eSgkcXVlcnlfdmFycykgLyAkcXVlcnlfdmFyc1sncGVyX3BhZ2UnXSk7DQogICAgICAgIA0KICAgICAgICAjIyBQYWdlIHZhciBmaWx0ZXJpbmcNCiAgICAgICAgaWYgKGlzc2V0KCRfR0VUWydwYWdlJ10pICYmIGlzX3N0cmluZygkX0dFVFsncGFnZSddKSkgew0KICAgICAgICAgICAgJGZpbHRlcl9wYWdlID0gZmlsdGVyX3ZhcigkX0dFVFsncGFnZSddLCBGSUxURVJfVkFMSURBVEVfSU5ULCBbJ29wdGlvbnMnID0+IFsnbWluX3JhbmdlJyA9PiAxLCAnbWF4X3JhbmdlJyA9PiAkbWF4X3BhZ2VzXV0pOw0KICAgICAgICAgICAgaWYgKCEkZmlsdGVyX3BhZ2UpIHsNCiAgICAgICAgICAgICAgICAkbm90X2ZvdW5kID0gbmV3IENvbnRyb2xsZXJFcnJvck5vdGZvdW5kKCk7DQogICAgICAgICAgICAgICAgJG5vdF9mb3VuZC0+aW5kZXgoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICRxdWVyeV92YXJzWydwYWdlJ10gPSAkZmlsdGVyX3BhZ2U7DQogICAgICAgIH0NCg0KICAgICAgICAjIyBTb3J0aW5nIHZhcnMgZmlsdGVyaW5nDQogICAgICAgICRhdmFpbGFibGVfdmFyc19zb3J0ZWRfYnkgPSBbJ25hbWUnLCAnZGF0ZScsICdyYXRpbmcnXTsNCg0KICAgICAgICBpZiAoaXNzZXQoJF9HRVRbJ3NvcnRfYnknXSkgJiYgaXNfc3RyaW5nKCRfR0VUWydzb3J0X2J5J10pKSB7DQogICAgICAgICAgICBpZiAoaW5fYXJyYXkoJF9HRVRbJ3NvcnRfYnknXSwgJGF2YWlsYWJsZV92YXJzX3NvcnRlZF9ieSkpIHsNCiAgICAgICAgICAgICAgICAkcXVlcnlfdmFyc1snc29ydF9ieSddID0gJF9HRVRbJ3NvcnRfYnknXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChpc3NldCgkX0dFVFsnc29ydF9kJ10pICYmIGlzX3N0cmluZygkX0dFVFsnc29ydF9kJ10pKSB7DQogICAgICAgICAgICBpZiAoJF9HRVRbJ3NvcnRfZCddID09ICdhc2MnIHx8ICRfR0VUWydzb3J0X2QnXSA9PSAnZGVzYycpIHsNCiAgICAgICAgICAgICAgICAkcXVlcnlfdmFyc1snc29ydF9kJ10gPSAkX0dFVFsnc29ydF9kJ107DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAjIyBHZXR0aW5nIGFsbCBkYXRhDQogICAgICAgICRkYXRhWydpbmdyZWRpZW50cyddID0gJG1vZGVsX3JlY2lwZS0+Z2V0QWxsSW5ncmVkaWVudHMoKTsNCiAgICAgICAgJGRhdGFbJ2NhdGVnb3JpZXMnXSAgPSAkbW9kZWxfcmVjaXBlLT5nZXRBbGxDYXRlZ29yaWVzKCk7DQogICAgICAgICRkYXRhWydyZWNpcGVzJ10gICAgID0gJG1vZGVsX3JlY2lwZS0+Z2V0QWxsKCRxdWVyeV92YXJzKTsNCg0KICAgICAgICAjIyBQYWdpbmF0aW9uDQogICAgICAgICRkYXRhWydwYWdpbmF0aW9uJ10gPSBbXTsNCg0KICAgICAgICBpZiAoJG1heF9wYWdlcyA+IDEpIHsNCiAgICAgICAgICAgIGlmICgkcXVlcnlfdmFyc1sncGFnZSddID4gMSkgew0KICAgICAgICAgICAgICAgICRkYXRhWydwYWdpbmF0aW9uJ11bJ3ByZXYnXSA9IFVybDo6c2V0VmFycyhVcmw6OmdldEN1cnJlbnRVcmwoKSwgWydwYWdlJyA9PiAkcXVlcnlfdmFyc1sncGFnZSddIC0gMV0pOw0KICAgICAgICAgICAgfQ0KICAgIA0KICAgICAgICAgICAgaWYgKCRxdWVyeV92YXJzWydwYWdlJ10gPCAkbWF4X3BhZ2VzKSB7DQogICAgICAgICAgICAgICAgJGRhdGFbJ3BhZ2luYXRpb24nXVsnbmV4dCddID0gVXJsOjpzZXRWYXJzKFVybDo6Z2V0Q3VycmVudFVybCgpLCBbJ3BhZ2UnID0+ICRxdWVyeV92YXJzWydwYWdlJ10gKyAxXSk7DQogICAgICAgICAgICB9DQogICAgDQogICAgICAgICAgICBmb3IgKCRpID0gMTsgJGkgPD0gJG1heF9wYWdlczsgJGkrKykgew0KICAgICAgICAgICAgICAgICRkYXRhWydwYWdpbmF0aW9uJ11bJ2l0ZW1zJ11bXSA9IFsNCiAgICAgICAgICAgICAgICAgICAgJ3BhZ2UnID0+ICRpLA0KICAgICAgICAgICAgICAgICAgICAnbGluaycgPT4gVXJsOjpzZXRWYXJzKFVybDo6Z2V0Q3VycmVudFVybCgpLCBbJ3BhZ2UnID0+ICRpXSksDQogICAgICAgICAgICAgICAgICAgICdjdXJyZW50JyA9PiAkcXVlcnlfdmFyc1sncGFnZSddID09ICRpDQogICAgICAgICAgICAgICAgXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgICMjIGdlbmVyYXRpbmcgc29ydGluZyBsaW5rcw0KICAgICAgICAkZGF0YVsnc29ydGluZ19saW5rcyddID0gWw0KICAgICAgICAgICAgJ2RhdGVfZGVzYycgPT4gWw0KICAgICAgICAgICAgICAgICduYW1lJyA9PiAnRGF0ZSAobmV3IHRvIG9sZCknLA0KICAgICAgICAgICAgICAgICdocmVmJyA9PiBVcmw6OnNldFZhcnMoVXJsOjpnZXRDdXJyZW50VXJsKCksIFsnc29ydF9ieScgPT4gJ2RhdGUnLCAnc29ydF9kJyA9PiAnZGVzYyddKSwNCiAgICAgICAgICAgICAgICAnYWN0aXZlJyA9PiBmYWxzZQ0KICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICdkYXRlX2FzYycgPT4gWw0KICAgICAgICAgICAgICAgICduYW1lJyA9PiAnRGF0ZSAob2xkIHRvIG5ldyknLA0KICAgICAgICAgICAgICAgICdocmVmJyA9PiBVcmw6OnNldFZhcnMoVXJsOjpnZXRDdXJyZW50VXJsKCksIFsnc29ydF9ieScgPT4gJ2RhdGUnLCAnc29ydF9kJyA9PiAnYXNjJ10pLA0KICAgICAgICAgICAgICAgICdhY3RpdmUnID0+IGZhbHNlDQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgJ25hbWVfYXNjJyA9PiBbDQogICAgICAgICAgICAgICAgJ25hbWUnID0+ICdOYW1lIChBIHRvIFopJywNCiAgICAgICAgICAgICAgICAnaHJlZicgPT4gVXJsOjpzZXRWYXJzKFVybDo6Z2V0Q3VycmVudFVybCgpLCBbJ3NvcnRfYnknID0+ICduYW1lJywgJ3NvcnRfZCcgPT4gJ2FzYyddKSwNCiAgICAgICAgICAgICAgICAnYWN0aXZlJyA9PiBmYWxzZQ0KICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICduYW1lX2Rlc2MnID0+IFsNCiAgICAgICAgICAgICAgICAnbmFtZScgPT4gJ05hbWUgKFogdG8gQSknLA0KICAgICAgICAgICAgICAgICdocmVmJyA9PiBVcmw6OnNldFZhcnMoVXJsOjpnZXRDdXJyZW50VXJsKCksIFsnc29ydF9ieScgPT4gJ25hbWUnLCAnc29ydF9kJyA9PiAnZGVzYyddKSwNCiAgICAgICAgICAgICAgICAnYWN0aXZlJyA9PiBmYWxzZQ0KICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICdyYXRpbmdfZGVzYycgPT4gWw0KICAgICAgICAgICAgICAgICduYW1lJyA9PiAnUmF0aW5nIChoaWdoIHRvIGxvdyknLA0KICAgICAgICAgICAgICAgICdocmVmJyA9PiBVcmw6OnNldFZhcnMoVXJsOjpnZXRDdXJyZW50VXJsKCksIFsnc29ydF9ieScgPT4gJ3JhdGluZycsICdzb3J0X2QnID0+ICdkZXNjJ10pLA0KICAgICAgICAgICAgICAgICdhY3RpdmUnID0+IGZhbHNlDQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgJ3JhdGluZ19hc2MnID0+IFsNCiAgICAgICAgICAgICAgICAnbmFtZScgPT4gJ1JhdGluZyAobG93IHRvIGhpZ2gpJywNCiAgICAgICAgICAgICAgICAnaHJlZicgPT4gVXJsOjpzZXRWYXJzKFVybDo6Z2V0Q3VycmVudFVybCgpLCBbJ3NvcnRfYnknID0+ICdyYXRpbmcnLCAnc29ydF9kJyA9PiAnYXNjJ10pLA0KICAgICAgICAgICAgICAgICdhY3RpdmUnID0+IGZhbHNlDQogICAgICAgICAgICBdLA0KICAgICAgICBdOw0KDQogICAgICAgICMjIG1ha2luZyBhY3RpdmUgc29ydCBsaW5rDQogICAgICAgIGlmIChpc3NldCgkcXVlcnlfdmFyc1snc29ydF9ieSddKSAmJiBpc3NldCgkcXVlcnlfdmFyc1snc29ydF9kJ10pKSB7DQogICAgICAgICAgICAkc29ydGluZ19xdWVyeV9zdHJpbmcgPSAkcXVlcnlfdmFyc1snc29ydF9ieSddIC4gJ18nIC4gJHF1ZXJ5X3ZhcnNbJ3NvcnRfZCddOw0KICAgICAgICAgICAgJGRhdGFbJ3NvcnRpbmdfbGlua3MnXVskc29ydGluZ19xdWVyeV9zdHJpbmddWydhY3RpdmUnXSA9IHRydWU7DQogICAgICAgIH0NCg0KICAgICAgICAjIyBwcm92aWRpbmcgZmlsdGVyZWQgcXVlcnkgdmFycw0KICAgICAgICAkZGF0YVsncXVlcnlfdmFycyddID0gJHF1ZXJ5X3ZhcnM7DQoNCiAgICAgICAgJHRoaXMtPmRvY3VtZW50LT5zZXRUaXRsZSgnUmVjaXBlcycpOw0KDQogICAgICAgICRoZWFkZXIgPSBuZXcgQ29udHJvbGxlckNvbW1vbkhlYWRlcigpOw0KICAgICAgICAkZm9vdGVyID0gbmV3IENvbnRyb2xsZXJDb21tb25Gb290ZXIoKTsNCg0KICAgICAgICAkZGF0YVsnaGVhZGVyJ10gPSAkaGVhZGVyLT5pbmRleChbDQogICAgICAgICAgICAncXVlcnlfdmFycycgPT4gJGRhdGFbJ3F1ZXJ5X3ZhcnMnXQ0KICAgICAgICBdKTsNCiAgICAgICAgJGRhdGFbJ2Zvb3RlciddID0gJGZvb3Rlci0+aW5kZXgoKTsNCiAgICAgICAgDQogICAgICAgICR0aGlzLT5yZXNwb25zZS0+c2V0T3V0cHV0KCR0aGlzLT52aWV3LT5nZXQoJ3JlY2lwZS9yZWNpcGVzJywgJGRhdGEpKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBQcm9jZXNzaW5nIGdldCBhbmQgcG9zdCByZXF1ZXN0cyBvbiB0aGUgcmVjaXBlIHBhZ2UuDQogICAgICogDQogICAgICogQHBhcmFtIG1peGVkICRxdWVyeV92YXJzDQogICAgICogDQogICAgICogQHJldHVybiB2b2lkDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIHNob3coJHF1ZXJ5X3ZhcnMpDQogICAgew0KICAgICAgICBpZiAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10gPT0gJ0dFVCcpIHsNCiAgICAgICAgICAgICRkYXRhID0gW107DQoNCiAgICAgICAgICAgICRtb2RlbF9yZWNpcGUgPSBuZXcgTW9kZWxSZWNpcGVSZWNpcGUoKTsNCiAgICAgICAgICAgICRtb2RlbF9yZXZpZXcgPSBuZXcgTW9kZWxSZWNpcGVSZXZpZXcoKTsNCg0KICAgICAgICAgICAgJGRhdGFbJ3JlY2lwZSddID0gJG1vZGVsX3JlY2lwZS0+Z2V0KCRxdWVyeV92YXJzWydpZCddKTsNCiAgICAgICAgICAgICRkYXRhWyd1c2VyJ10gPSAkdGhpcy0+dXNlci0+Z2V0Q3VycmVudFVzZXIoKTsNCg0KICAgICAgICAgICAgaWYgKCEkZGF0YVsncmVjaXBlJ10pIHsNCiAgICAgICAgICAgICAgICAkbm90X2ZvdW5kID0gbmV3IENvbnRyb2xsZXJFcnJvck5vdGZvdW5kKCk7DQogICAgICAgICAgICAgICAgJG5vdF9mb3VuZC0+aW5kZXgoKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgJGRhdGFbJ3Jldmlld19xdWFudGl0eSddID0gJG1vZGVsX3Jldmlldy0+Z2V0UXVhbnRpdHkoJHF1ZXJ5X3ZhcnMpOw0KDQogICAgICAgICAgICAjIyByZXZpZXdzIHBhZ2luYXRpb24NCiAgICAgICAgICAgICRkYXRhWyduZXh0X3Jldmlld3MnXSA9ICcnOw0KICAgICAgICAgICAgDQogICAgICAgICAgICAkcmV2aWV3X3BhZ2luYXRpb24gPSBbDQogICAgICAgICAgICAgICAgJ3Blcl9wYWdlJyA9PiA2LA0KICAgICAgICAgICAgICAgICdwYWdlJyA9PiAxDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAkbWF4X3BhZ2VzID0gY2VpbCgkZGF0YVsncmV2aWV3X3F1YW50aXR5J10gLyAkcmV2aWV3X3BhZ2luYXRpb25bJ3Blcl9wYWdlJ10pOw0KDQogICAgICAgICAgICAjIyBQYWdlIHZhciBmaWx0ZXJpbmcNCiAgICAgICAgICAgIGlmIChpc3NldCgkX0dFVFsncGFnZSddKSAmJiBpc19zdHJpbmcoJF9HRVRbJ3BhZ2UnXSkpIHsNCiAgICAgICAgICAgICAgICAkZmlsdGVyX3BhZ2UgPSBmaWx0ZXJfdmFyKCRfR0VUWydwYWdlJ10sIEZJTFRFUl9WQUxJREFURV9JTlQsIFsnb3B0aW9ucycgPT4gWydtaW5fcmFuZ2UnID0+IDEsICdtYXhfcmFuZ2UnID0+ICRtYXhfcGFnZXNdXSk7DQogICAgICAgICAgICAgICAgaWYgKCEkZmlsdGVyX3BhZ2UpIHsNCiAgICAgICAgICAgICAgICAgICAgJG5vdF9mb3VuZCA9IG5ldyBDb250cm9sbGVyRXJyb3JOb3Rmb3VuZCgpOw0KICAgICAgICAgICAgICAgICAgICAkbm90X2ZvdW5kLT5pbmRleCgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAkcmV2aWV3X3BhZ2luYXRpb25bJ3BhZ2UnXSA9ICRmaWx0ZXJfcGFnZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKCRyZXZpZXdfcGFnaW5hdGlvblsncGFnZSddIDwgJG1heF9wYWdlcykgew0KICAgICAgICAgICAgICAgICRkYXRhWyduZXh0X3Jldmlld3MnXSA9IFVybDo6c2V0VmFycyhVcmw6OmdldEN1cnJlbnRVcmwoKSwgWydwYWdlJyA9PiAkcmV2aWV3X3BhZ2luYXRpb25bJ3BhZ2UnXSArIDFdKSAuICcjcmV2aWV3cyc7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICRkYXRhWydyZXZpZXdzJ10gPSAkbW9kZWxfcmV2aWV3LT5nZXQoWw0KICAgICAgICAgICAgICAgICdpZCcgPT4gJHF1ZXJ5X3ZhcnNbJ2lkJ10sDQogICAgICAgICAgICAgICAgJ3Blcl9wYWdlJyA9PiAkcmV2aWV3X3BhZ2luYXRpb25bJ3Blcl9wYWdlJ10sDQogICAgICAgICAgICAgICAgJ3BhZ2UnID0+ICRyZXZpZXdfcGFnaW5hdGlvblsncGFnZSddDQogICAgICAgICAgICBdKTsNCg0KICAgICAgICAgICAgJGRhdGFbJ2luZ3JlZGllbnRzJ10gPSAkbW9kZWxfcmVjaXBlLT5nZXRJbmdyZWRpZW50cygkcXVlcnlfdmFyc1snaWQnXSk7DQogICAgICAgICAgICAkZGF0YVsnY2F0ZWdvcmllcyddID0gJG1vZGVsX3JlY2lwZS0+Z2V0Q2F0ZWdvcmllcygkcXVlcnlfdmFyc1snaWQnXSk7DQoNCiAgICAgICAgICAgICMjIHNlc3Npb24gZm9ybSBkYXRhDQogICAgICAgICAgICBpZiAoaXNzZXQoJF9TRVNTSU9OWydmb3JtX2RhdGEnXSkpIHsNCiAgICAgICAgICAgICAgICAkZGF0YVsnZm9ybV9kYXRhJ10gPSAkX1NFU1NJT05bJ2Zvcm1fZGF0YSddOw0KICAgICAgICAgICAgICAgIHVuc2V0KCRfU0VTU0lPTlsnZm9ybV9kYXRhJ10pOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkdGhpcy0+ZG9jdW1lbnQtPnNldFRpdGxlKCRkYXRhWydyZWNpcGUnXVsndGl0bGUnXSk7DQoNCiAgICAgICAgICAgICRoZWFkZXIgPSBuZXcgQ29udHJvbGxlckNvbW1vbkhlYWRlcigpOw0KICAgICAgICAgICAgJGZvb3RlciA9IG5ldyBDb250cm9sbGVyQ29tbW9uRm9vdGVyKCk7DQoNCiAgICAgICAgICAgICRkYXRhWydoZWFkZXInXSA9ICRoZWFkZXItPmluZGV4KCk7DQogICAgICAgICAgICAkZGF0YVsnZm9vdGVyJ10gPSAkZm9vdGVyLT5pbmRleCgpOw0KDQogICAgICAgICAgICAkdGhpcy0+cmVzcG9uc2UtPnNldE91dHB1dCgkdGhpcy0+dmlldy0+Z2V0KCdyZWNpcGUvcmVjaXBlJywgJGRhdGEpKTsNCiAgICAgICAgfSANCiAgICAgICAgZWxzZWlmICgkX1NFUlZFUlsnUkVRVUVTVF9NRVRIT0QnXSA9PSAnUE9TVCcpIA0KICAgICAgICB7ICAgDQogICAgICAgICAgICBpZiAoaXNzZXQoJF9QT1NUWydhZGQtcmV2aWV3J10pKSB7DQogICAgICAgICAgICAgICAgaWYgKCEoJHRoaXMtPnVzZXItPmdldEN1cnJlbnRVc2VyKCkpKSByZXR1cm4gZmFsc2U7DQoNCiAgICAgICAgICAgICAgICAkbW9kZWxfcmV2aWV3ID0gbmV3IE1vZGVsUmVjaXBlUmV2aWV3KCk7DQogICAgICAgICAgICAgICAgJHVzZXIgPSAkdGhpcy0+dXNlci0+Z2V0Q3VycmVudFVzZXIoKTsNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAjIyBSZW1vdmluZyBodG1sIHRhZ3MgYW5kIHNwYWNlcw0KICAgICAgICAgICAgICAgICRkYXRhWydyZXZpZXcnXSA9IGlzc2V0KCRfUE9TVFsncmV2aWV3J10pID8gcHJlZ19yZXBsYWNlKCcvW1xzXXsyLH0vJywgJyAnLCB0cmltKGh0bWxzcGVjaWFsY2hhcnMoJF9QT1NUWydyZXZpZXcnXSkpKSA6ICcnOw0KICAgICAgICAgICAgICAgICRkYXRhWydyYXRpbmcnXSA9IGlzc2V0KCRfUE9TVFsncmF0aW5nJ10pID8gJF9QT1NUWydyYXRpbmcnXSA6ICcnOw0KDQogICAgICAgICAgICAgICAgIyMgVmFsaWRhdGlvbg0KICAgICAgICAgICAgICAgICRkYXRhWyd2YWxpZGF0aW9uJ10gPSBbXTsNCg0KICAgICAgICAgICAgICAgICMjIFJldmlldw0KICAgICAgICAgICAgICAgICRkYXRhWyd2YWxpZGF0aW9uJ11bJ3JldmlldyddID0gKGZ1bmN0aW9uKCYgJGRhdGEpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN0cmxlbigkZGF0YVsncmV2aWV3J10pIDwgMikgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdSZXZpZXcgbXVzdCBub3QgYmUgc2hvcnRlciB0aGFuIDIgY2hhcmFjdGVycy4nOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgIA0KICAgICAgICAgICAgICAgICAgICBpZiAoc3RybGVuKCRkYXRhWydyZXZpZXcnXSkgPiA1MDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnUmV2aWV3IG11c3Qgbm90IGJlIGxvbmdlciB0aGFuIDUwMCBjaGFyYWN0ZXJzLic7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KSgkZGF0YSk7DQoNCiAgICAgICAgICAgICAgICAjIyBSYXRpbmcNCiAgICAgICAgICAgICAgICAkZGF0YVsndmFsaWRhdGlvbiddWydyYXRpbmcnXSA9IChmdW5jdGlvbigmICRkYXRhKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChlbXB0eSgkZGF0YVsncmF0aW5nJ10pKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1BsZWFzZSBzZWxlY3QgYSByYXRpbmcuJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICRpc19pbnRlZ2VyID0gZmlsdGVyX3ZhcigkZGF0YVsncmF0aW5nJ10sIEZJTFRFUl9WQUxJREFURV9JTlQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoISRpc19pbnRlZ2VyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1RoZSBzY29yZSBtdXN0IGJlIGFuIGludGVnZXIuJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIGlmICgkZGF0YVsncmF0aW5nJ10gPCAxIHx8ICRkYXRhWydyYXRpbmcnXSA+IDUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnUmF0aW5nIG11c3QgYmUgYmV0d2VlbiAxIGFuZCA1Lic7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KSgkZGF0YSk7DQoNCiAgICAgICAgICAgICAgICAjIyBEZWxldGluZyBmaWVsZHMgd2l0aG91dCBlcnJvcnMNCiAgICAgICAgICAgICAgICAkZGF0YVsndmFsaWRhdGlvbiddID0gYXJyYXlfZmlsdGVyKCRkYXRhWyd2YWxpZGF0aW9uJ10sIGZ1bmN0aW9uKCR2YWx1ZSkgeyByZXR1cm4gIWVtcHR5KCR2YWx1ZSk7IH0pOw0KDQogICAgICAgICAgICAgICAgaWYgKGVtcHR5KCRkYXRhWyd2YWxpZGF0aW9uJ10pKSB7DQogICAgICAgICAgICAgICAgICAgICRyZXN1bHQgPSAkbW9kZWxfcmV2aWV3LT5hZGQoWw0KICAgICAgICAgICAgICAgICAgICAgICAgJ3VzZXJfaWQnICAgPT4gJHVzZXJbJ3VzZXJfaWQnXSwNCiAgICAgICAgICAgICAgICAgICAgICAgICdyZWNpcGVfaWQnID0+ICRxdWVyeV92YXJzWydpZCddLA0KICAgICAgICAgICAgICAgICAgICAgICAgJ3JldmlldycgICAgPT4gJGRhdGFbJ3JldmlldyddLA0KICAgICAgICAgICAgICAgICAgICAgICAgJ3JhdGluZycgICAgPT4gJGRhdGFbJ3JhdGluZyddLA0KICAgICAgICAgICAgICAgICAgICBdKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCRyZXN1bHQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRfU0VTU0lPTlsnZm9ybV9kYXRhJ11bJ3N1Y2Nlc3MnXSA9ICdUaGUgcmV2aWV3IHdhcyBzdWNjZXNzZnVsbHkgc3VibWl0dGVkLic7DQogICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+cmVzcG9uc2UtPnJlZGlyZWN0KFVybDo6Z2V0Q3VycmVudFVybCgpIC4gJyNyZXZpZXctc2VjdGlvbicpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICRkYXRhWydlcnJvciddID0gJ1NvbWV0aGluZyB3ZW50IHdyb25nLic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgJF9TRVNTSU9OWydmb3JtX2RhdGEnXSA9ICRkYXRhOw0KICAgICAgICAgICAgICAgICR0aGlzLT5yZXNwb25zZS0+cmVkaXJlY3QoVXJsOjpnZXRDdXJyZW50VXJsKCkgLiAnI3Jldmlldy1zZWN0aW9uJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBQcm9jZXNzaW5nIGdldCBhbmQgcG9zdCByZXF1ZXN0cyBvbiB0aGUgcmVjaXBlIGFkZCBwYWdlLg0KICAgICAqIA0KICAgICAqIEBwYXJhbSBhcnJheSAkZGF0YQ0KICAgICAqIA0KICAgICAqIEByZXR1cm4gdm9pZA0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBhZGQoJGRhdGEgPSBbXSkNCiAgICB7DQogICAgICAgIGlmICghKCR0aGlzLT51c2VyLT5nZXRDdXJyZW50VXNlcigpKSB8fCAkdGhpcy0+dXNlci0+Z2V0Q3VycmVudFVzZXIoKVsndXNlcl9ncm91cF9pZCddICE9IDEpIHsNCiAgICAgICAgICAgICR0aGlzLT5yZXNwb25zZS0+cmVkaXJlY3QoVXJsOjpnZXRVcmwoJy8nKSk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10gPT0gJ0dFVCcpIHsNCiAgICAgICAgICAgICRtb2RlbF9yZWNpcGUgPSBuZXcgTW9kZWxSZWNpcGVSZWNpcGUoKTsNCg0KICAgICAgICAgICAgJGRhdGFbJ2luZ3JlZGllbnRzJ10gPSAkbW9kZWxfcmVjaXBlLT5nZXRBbGxJbmdyZWRpZW50cygpOw0KICAgICAgICAgICAgJGRhdGFbJ2NhdGVnb3JpZXMnXSA9ICRtb2RlbF9yZWNpcGUtPmdldEFsbENhdGVnb3JpZXMoKTsNCg0KICAgICAgICAgICAgIyMgc2Vzc2lvbiBmb3JtIGRhdGENCiAgICAgICAgICAgIGlmIChpc3NldCgkX1NFU1NJT05bJ2Zvcm1fZGF0YSddKSkgew0KICAgICAgICAgICAgICAgICRkYXRhWydmb3JtX2RhdGEnXSA9ICRfU0VTU0lPTlsnZm9ybV9kYXRhJ107DQogICAgICAgICAgICAgICAgdW5zZXQoJF9TRVNTSU9OWydmb3JtX2RhdGEnXSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICR0aGlzLT5kb2N1bWVudC0+c2V0VGl0bGUoJ0FkZCBSZWNpcGUnKTsNCg0KICAgICAgICAgICAgJGhlYWRlciA9IG5ldyBDb250cm9sbGVyQ29tbW9uSGVhZGVyKCk7DQogICAgICAgICAgICAkZm9vdGVyID0gbmV3IENvbnRyb2xsZXJDb21tb25Gb290ZXIoKTsNCiAgICAgICAgDQogICAgICAgICAgICAkZGF0YVsnaGVhZGVyJ10gPSAkaGVhZGVyLT5pbmRleCgpOw0KICAgICAgICAgICAgJGRhdGFbJ2Zvb3RlciddID0gJGZvb3Rlci0+aW5kZXgoKTsNCg0KICAgICAgICAgICAgJHRoaXMtPnJlc3BvbnNlLT5zZXRPdXRwdXQoJHRoaXMtPnZpZXctPmdldCgncmVjaXBlL2FkZCcsICRkYXRhKSk7DQogICAgICAgIH0gDQogICAgICAgIGVsc2VpZiAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10gPT0gJ1BPU1QnKSANCiAgICAgICAgew0KICAgICAgICAgICAgaWYgKGlzc2V0KCRfUE9TVFsnYWRkLXJlY2lwZSddKSkgew0KICAgICAgICAgICAgICAgICRtb2RlbF9yZWNpcGUgPSBuZXcgTW9kZWxSZWNpcGVSZWNpcGUoKTsNCg0KICAgICAgICAgICAgICAgICMjIFJlbW92aW5nIGh0bWwgdGFncyBhbmQgc3BhY2VzDQogICAgICAgICAgICAgICAgJGRhdGFbJ3RpdGxlJ10gICAgICAgPSBpc3NldCgkX1BPU1RbJ3RpdGxlJ10pID8gdHJpbShodG1sc3BlY2lhbGNoYXJzKCRfUE9TVFsndGl0bGUnXSkpIDogJyc7DQogICAgICAgICAgICAgICAgJGRhdGFbJ2Rlc2NyaXB0aW9uJ10gPSBpc3NldCgkX1BPU1RbJ2Rlc2NyaXB0aW9uJ10pID8gdHJpbShodG1sc3BlY2lhbGNoYXJzKCRfUE9TVFsnZGVzY3JpcHRpb24nXSkpIDogJyc7DQogICAgICAgICAgICAgICAgJGRhdGFbJ2luZ3JlZGllbnRzJ10gPSBpc3NldCgkX1BPU1RbJ2luZ3JlZGllbnRzJ10pICYmIGlzX2FycmF5KCRfUE9TVFsnaW5ncmVkaWVudHMnXSkgPyAkX1BPU1RbJ2luZ3JlZGllbnRzJ10gOiBbXTsNCiAgICAgICAgICAgICAgICAkZGF0YVsnY2F0ZWdvcmllcyddICA9IGlzc2V0KCRfUE9TVFsnY2F0ZWdvcmllcyddKSAmJiBpc19hcnJheSgkX1BPU1RbJ2NhdGVnb3JpZXMnXSkgPyAkX1BPU1RbJ2NhdGVnb3JpZXMnXSA6IFtdOw0KICAgICAgICAgICAgICAgICRkYXRhWydpbWFnZXMnXSAgICAgID0gaXNzZXQoJF9GSUxFU1snaW1hZ2VzJ10pICYmIGlzX2FycmF5KCRfRklMRVNbJ2ltYWdlcyddKSA/ICRfRklMRVNbJ2ltYWdlcyddIDogW107DQoNCiAgICAgICAgICAgICAgICAjIyBWYWxpZGF0aW9uDQogICAgICAgICAgICAgICAgJGRhdGFbJ3ZhbGlkYXRpb24nXSA9IFtdOw0KDQogICAgICAgICAgICAgICAgIyMgSW1hZ2VzDQogICAgICAgICAgICAgICAgJGRhdGFbJ3ZhbGlkYXRpb24nXVsnaW1hZ2VzJ10gPSAoZnVuY3Rpb24oJiAkZGF0YSkgew0KICAgICAgICAgICAgICAgICAgICBpZiAoZW1wdHkoJGRhdGFbJ2ltYWdlcyddKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdJbWFnZXMgYXJlIHJlcXVpcmVkLic7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBpZiAoIWlzX2FycmF5KCRkYXRhWydpbWFnZXMnXVsnbmFtZSddKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdTb21ldGhpbmcgd2VudCB3cm9uZy4nOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGVtcHR5KCRkYXRhWydpbWFnZXMnXVsnbmFtZSddWzBdKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdJbWFnZXMgYXJlIHJlcXVpcmVkLic7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAjIyBFcnJvcnMNCiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGRhdGFbJ2ltYWdlcyddWydlcnJvciddIGFzICRlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRlcnJvciAhPT0gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnU29tZXRoaW5nIHdlbnQgd3JvbmcuJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICMjIFNpemUNCiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGRhdGFbJ2ltYWdlcyddWydzaXplJ10gYXMgJHNpemUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkc2l6ZSA+IDUyNDI4ODApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1RoZSBpbWFnZSBtdXN0IG5vdCBiZSBsYXJnZXIgdGhhbiA1IG1lZ2FieXRlcy4nOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgIyMgVHlwZQ0KICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkZGF0YVsnaW1hZ2VzJ11bJ3R5cGUnXSBhcyAkdHlwZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFlbXB0eSgkdHlwZSkgJiYgJHR5cGUgIT09ICdpbWFnZS9qcGVnJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnVW5zdXBwb3J0ZWQgaW1hZ2UgZm9ybWF0LiBPbmx5IEpQRUcuJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pKCRkYXRhKTsNCg0KICAgICAgICAgICAgICAgICMjIEluZ3JlZGllbnRzIGFuZCBDYXRlZ29yaWVzIGZpbHRlcmluZw0KICAgICAgICAgICAgICAgICRmaWx0ZXJfZnVuY3Rpb24gPSBmdW5jdGlvbigkaXRlbSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmlsdGVyX3ZhcigkaXRlbSwgRklMVEVSX1ZBTElEQVRFX0lOVCwgWydvcHRpb25zJyA9PiBbJ21pbl9yYW5nZScgPT4gMV1dKTsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgIyMgSW5ncmVkaWVudHMgVmFsaWRhdGlvbg0KICAgICAgICAgICAgICAgICRkYXRhWydpbmdyZWRpZW50cyddID0gYXJyYXlfZmlsdGVyKCRkYXRhWydpbmdyZWRpZW50cyddLCAkZmlsdGVyX2Z1bmN0aW9uKTsNCiAgICAgICAgICAgICAgICBpZiAoZW1wdHkoJGRhdGFbJ2luZ3JlZGllbnRzJ10pKSB7DQogICAgICAgICAgICAgICAgICAgICRkYXRhWyd2YWxpZGF0aW9uJ11bJ2luZ3JlZGllbnRzJ10gPSAnUGxlYXNlIHNlbGVjdCBhdCBsZWFzdCBvbmUgaW5ncmVkaWVudC4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICMjIENhdGVnb3JpZXMgVmFsaWRhdGlvbg0KICAgICAgICAgICAgICAgICRkYXRhWydjYXRlZ29yaWVzJ10gPSBhcnJheV9maWx0ZXIoJGRhdGFbJ2NhdGVnb3JpZXMnXSwgJGZpbHRlcl9mdW5jdGlvbik7DQogICAgICAgICAgICAgICAgaWYgKGVtcHR5KCRkYXRhWydjYXRlZ29yaWVzJ10pKSB7DQogICAgICAgICAgICAgICAgICAgICRkYXRhWyd2YWxpZGF0aW9uJ11bJ2NhdGVnb3JpZXMnXSA9ICdQbGVhc2Ugc2VsZWN0IGF0IGxlYXN0IG9uZSBjYXRlZ29yeS4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICMjIERlc2NyaXB0aXBuDQogICAgICAgICAgICAgICAgJGRhdGFbJ3ZhbGlkYXRpb24nXVsnZGVzY3JpcHRpb24nXSA9IChmdW5jdGlvbigmICRkYXRhKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChzdHJsZW4oJGRhdGFbJ2Rlc2NyaXB0aW9uJ10pIDwgMikgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdEZXNjcmlwdGlvbiBtdXN0IG5vdCBiZSBzaG9ydGVyIHRoYW4gMiBjaGFyYWN0ZXJzLic7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBpZiAoc3RybGVuKCRkYXRhWydkZXNjcmlwdGlvbiddKSA+IDEwMDAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ0Rlc2NyaXB0aW9uIG11c3Qgbm90IGJlIGxvbmdlciB0aGFuIDEwIDAwMCBjaGFyYWN0ZXJzLic7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KSgkZGF0YSk7DQoNCiAgICAgICAgICAgICAgICAjIyBUaXRsZQ0KICAgICAgICAgICAgICAgICRkYXRhWyd2YWxpZGF0aW9uJ11bJ3RpdGxlJ10gPSAoZnVuY3Rpb24oJiAkZGF0YSkgew0KICAgICAgICAgICAgICAgICAgICBpZiAoc3RybGVuKCRkYXRhWyd0aXRsZSddKSA8IDIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnVGl0bGUgbXVzdCBub3QgYmUgc2hvcnRlciB0aGFuIDIgY2hhcmFjdGVycy4nOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN0cmxlbigkZGF0YVsndGl0bGUnXSkgPiAyNTUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnVGl0bGUgbXVzdCBub3QgYmUgbG9uZ2VyIHRoYW4gMjU1IGNoYXJhY3RlcnMuJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pKCRkYXRhKTsNCg0KICAgICAgICAgICAgICAgICMjIERlbGV0aW5nIGZpZWxkcyB3aXRob3V0IGVycm9ycw0KICAgICAgICAgICAgICAgICRkYXRhWyd2YWxpZGF0aW9uJ10gPSBhcnJheV9maWx0ZXIoJGRhdGFbJ3ZhbGlkYXRpb24nXSwgZnVuY3Rpb24oJHZhbHVlKSB7IHJldHVybiAhZW1wdHkoJHZhbHVlKTsgfSk7DQoNCiAgICAgICAgICAgICAgICBpZiAoZW1wdHkoJGRhdGFbJ3ZhbGlkYXRpb24nXSkpIHsNCiAgICAgICAgICAgICAgICAgICAgJHJlc3VsdCA9ICRtb2RlbF9yZWNpcGUtPmFkZCgkZGF0YSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKCEkcmVzdWx0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkZGF0YVsnZXJyb3InXSA9ICdTb21ldGhpbmcgd2VudCB3cm9uZy4nOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgJF9TRVNTSU9OWydmb3JtX2RhdGEnXVsnc3VjY2VzcyddID0gJ1RoZSByZWNpcGUgd2FzIHN1Y2Nlc3NmdWxseSBhZGRlZC4nOw0KICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnJlc3BvbnNlLT5yZWRpcmVjdChVcmw6OmdldEN1cnJlbnRVcmwoKSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAkX1NFU1NJT05bJ2Zvcm1fZGF0YSddID0gJGRhdGE7DQogICAgICAgICAgICAgICAgJHRoaXMtPnJlc3BvbnNlLT5yZWRpcmVjdChVcmw6OmdldEN1cnJlbnRVcmwoKSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9IjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6MjM6IlxDb250cm9sbGVyUmVjaXBlUmVjaXBlIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTI6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjIzOiJcQ29udHJvbGxlclJlY2lwZVJlY2lwZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIyOiJDb250cm9sbGVyUmVjaXBlUmVjaXBlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyMjoiQ29udHJvbGxlclJlY2lwZVJlY2lwZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo1MToiVGhlIGNvbnRyb2xsZXIgaXMgcmVzcG9uc2libGUgZm9yIHRoZSByZWNpcGUgcGFnZXMuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHBhcmVudCI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjExOiJcQ29udHJvbGxlciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEwOiJDb250cm9sbGVyIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGltcGxlbWVudHMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBjb25zdGFudHMiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwcm9wZXJ0aWVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbWV0aG9kcyI7YTozOntzOjMyOiJcQ29udHJvbGxlclJlY2lwZVJlY2lwZTo6aW5kZXgoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEwOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjUzOiJQcm9jZXNzaW5nIGdldCBhbmQgcG9zdCByZXF1ZXN0cyBvbiB0aGUgcmVjaXBlcyBwYWdlLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6NDoiZGF0YSI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDtzOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MzI6IlxDb250cm9sbGVyUmVjaXBlUmVjaXBlOjppbmRleCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NToiaW5kZXgiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NDoiZGF0YSI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO3M6MjoiW10iO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9fXM6MzE6IlxDb250cm9sbGVyUmVjaXBlUmVjaXBlOjpzaG93KCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMDp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo1MjoiUHJvY2Vzc2luZyBnZXQgYW5kIHBvc3QgcmVxdWVzdHMgb24gdGhlIHJlY2lwZSBwYWdlLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6MTA6InF1ZXJ5X3ZhcnMiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcVm9pZF8iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozMToiXENvbnRyb2xsZXJSZWNpcGVSZWNpcGU6OnNob3coKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjQ6InNob3ciO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTA6InF1ZXJ5X3ZhcnMiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNjc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fX1zOjMwOiJcQ29udHJvbGxlclJlY2lwZVJlY2lwZTo6YWRkKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMDp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo1NjoiUHJvY2Vzc2luZyBnZXQgYW5kIHBvc3QgcmVxdWVzdHMgb24gdGhlIHJlY2lwZSBhZGQgcGFnZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6Mjp7aTowO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtIjo2OntzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AdmFyaWFibGVOYW1lIjtzOjQ6ImRhdGEiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX1zOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjMwOiJcQ29udHJvbGxlclJlY2lwZVJlY2lwZTo6YWRkKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czozOiJhZGQiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NDoiZGF0YSI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO3M6MjoiW10iO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozMDY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fX19czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHVzZWRUcmFpdHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6ODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbWV0YWRhdGEiO2E6MDp7fX19czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";